#
# demo config for Proxy mode
#
# global 为全局配置项，主要和 haproxy 进程本身有关。defaults 为默认配置，当后面的 listen、frontend、banckend 等块没有再次指明相关配置时，会继承 defaults 的配置。
global
    maxconn     2000  #最大连接数
    ulimit-n    204800  #ulimit的数量限制
    log         127.0.0.1 local0
#    user        haproxy
#    group       haproxy
#    chroot      /usr/local/etc/haproxy  改变运行根目录
    nbproc      4  #启动后运行的进程数量
    daemon      #以后台形式运行haproxy
    pidfile     /var/run/haproxy.pid

defaults
    log         global
    mode        http
    retries     3
    timeout     connect     5s
    timeout     client      30s
    timeout     server      30s
    option      redispatch
    option      nolinger
    no          option      dontlognull
    option      tcplog
    option      log-separate-errors

#listen admin_stats
#    bind 0.0.0.0:80
#    bind-process    1
#    mode            http
#    stats           enable
#    log             127.0.0.1   local0  err
#    stats           refresh     30s
#    stats           uri         /haproxy_status
#    stats           realm   welcome     login\ Haproxy
#    stats           auth    admin:123456
#    stats           hide-version
#    stats           admin   if   TRUE

frontend  http-in
    bind    :80
    mode    http
    log     global

    stats           enable
    log             127.0.0.1   local0  err
    stats           refresh     30s
    stats           uri         /haproxy_status
    stats           realm   welcome     login\ Haproxy
    stats           auth    admin:123456
    stats           hide-version
    stats           admin   if   TRUE

# 如果 请求是以 api.开关 则 找后端 host_api
    acl              host_api        hdr_beg(host) -i api.
# 如果  host_api 批配 则找 backend api
    use_backend      api             if host_api

#    default_backend    api
backend  api
    balance     roundrobin
    server server1 192.168.190.132:8080  check inter 5s rise 2 fall 2
    server server2 192.168.190.132:8081  check inter 5s rise 2 fall 2
#check inter 1500 心跳检测频率, rise 3 是3次正确认为服务器可用，fall 3是3次失败认为服务器不可用

frontend tcp-in
    bind    :6606
    mode    tcp
    log     global
    option  tcplog

    acl                 tcp_mysql       hdr_beg(host)  -i msql.
    use_backend         mysql           if tcp_mysql

backend  mysql
    balance   roundrobin
    server server1  192.168.190.132:3306 check inter 5s rise 2 fall 2